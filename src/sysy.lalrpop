use std::str::FromStr;
use crate::ast::node::*;
grammar;

match {
    // 跳过空白符和注释
    r"\s*" => {},
    r"//[^\n\r]*[\n\r]*" => {},
    _
}

pub CompUnit: CompUnit = {
    <func_def: FuncDef> => CompUnit { <> }
}

FuncDef: FuncDef = {
    <func_type: FuncType> <ident: Ident> "(" ")" <block: Block> => FuncDef { <> }
}

FuncType: FuncType = {
    "int" => FuncType::Int
}

Block: Block = {
    "{" <stmt: Stmt> "}" => Block {<>}
}

Stmt: Stmt = {
    "return" <num: Number> ";" => Stmt {<>}
}


Number: i32 = {
    r"[0-9]+" => i32::from_str(<>).unwrap()
}


Ident: String = {
    <s:r"[_a-zA-Z][_a-zA-Z0-9]*"> => s.to_string()
}

